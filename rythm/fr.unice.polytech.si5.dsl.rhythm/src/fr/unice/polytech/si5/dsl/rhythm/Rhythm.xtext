// automatically generated by Xtext
grammar fr.unice.polytech.si5.dsl.rhythm.Rhythm with org.eclipse.xtext.common.Terminals

import "http://www.polytech.unice.fr/rhythmML" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Rhythm returns Rhythm:
	'rhythm' name=EString 'tempo' BPM=EInt 'BPM'
	
	tracks+=Track
	(tracks+=Track)*
	;

DrumTrackImpl returns DrumTrack :
	{DrumTrack}
	'drum track'
;

ClassicTrackImpl returns ClassicTrack :
	{ClassicTrack}
	'track'
;


Track returns Track :
	(ClassicTrackImpl | DrumTrackImpl) name=EString
	'{'
		('offsets:'
			offsets+=NoteOffset
			(offsets+=NoteOffset)*
			
		)?
		('patterns:' 
			patterns+=Pattern 
			(patterns+=Pattern)*
		)?
		
		'sections:'
		sections+=Section
		(sections+=Section)*
		
		'composition:'
		composition=Composition
	'}'
	
;

NoteOffset returns NoteOffset:
	'note:' note = (Note|DrumNote)  value = (EPlusFloat | EMinusFloat) 'ticks'
;



Pattern returns Pattern :
	name=EString 
	'{'
		'beat:' beats+=Beat
		('beat:' beats+=Beat)*
	'}'
;

Beat returns Beat :
	 ticks+=Tick (', 'ticks+=Tick)*
;

Tick returns Tick:
	 ( notes+=Note (notes+=Note)* ) |  ( notes+=DrumNote (notes+=DrumNote)* )
;

Note returns ClassicNote:
	note=NoteEnum
;

DrumNote returns DrumNote:
	drumNote=DrumNoteEnum
;



Composition returns Composition:
	sections +=[Section|EString] (','sections +=[Section|EString])*
;

Section returns Section : 
	name=EString
	'{'
		'pattern:' patternLoops+=PatternLoop (',' patternLoops+=PatternLoop)*
		
		(patternModifications += PatternModification)*
	'}'
;

PatternLoop returns PatternLoop :
	pattern =[Pattern|EString] loopNumber=EInt 'times'
;


PatternModification returns PatternModification :
	(PatternModificationArray) | (PatternModificationEvery)
;

PatternModificationArray returns PatternModification :
	pattern =[Pattern|EString] 
	
	'(iteration:' 
	'['(iterationBegin=EInt)?':'(iterationEnd=EInt)?']'
	 ',beat:' beatNumber=EInt'):' beat=Beat  	
;

PatternModificationEvery returns PatternModification :
	pattern =[Pattern|EString] 
	
	'(iteration:' 
	'every' everyIteration=EInt
	 ',beat:' beatNumber=EInt'):' beat=Beat  
;

enum NoteEnum returns NOTES :
	 DO = "do" | DO_SHARP = "do#" | FA = "fa" | FA_SHARP = "fa#" | LA = "la" 
	| LA_SHARP = "la#" | MI = "mi" | RE = "re" | RE_SHARP = "re#" | SI = "si" | SOL = "sol" | SOL_SHARP = "sol#" /* | BLANK = "_"*/
;

enum DrumNoteEnum returns DRUM_NOTES :
	BD = "bd" | SD = "sd" | BLANK = "_" | CH = "ch" | OH = "oh" | CC = "cc" | RC = "rc";

EString returns ecore::EString:
	STRING | ID;

EInt returns ecore::EInt:
	INT;
	
EFloat returns ecore::EFloat:
	INT '.' INT
;
	
EPlusFloat returns ecore::EFloat:
	'+' INT '.' INT
;

EMinusFloat returns ecore::EFloat:
	'-' INT '.' INT
;
	